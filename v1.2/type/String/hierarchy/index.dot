strict digraph "String - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "CollectionType" [URL="/protocol/CollectionType/hierarchy/"]
    "Comparable" [URL="/protocol/Comparable/hierarchy/"]
    "DebugPrintable" [URL="/protocol/DebugPrintable/hierarchy/"]
    "Equatable" [URL="/protocol/Equatable/hierarchy/"]
    "ExtendedGraphemeClusterLiteralConvertible" [URL="/protocol/ExtendedGraphemeClusterLiteralConvertible/hierarchy/"]
    "ExtensibleCollectionType" [URL="/protocol/ExtensibleCollectionType/hierarchy/"]
    "Hashable" [URL="/protocol/Hashable/hierarchy/"]
    "OutputStreamType" [URL="/protocol/OutputStreamType/hierarchy/"]
    "RangeReplaceableCollectionType" [URL="/protocol/RangeReplaceableCollectionType/hierarchy/"]
    "Reflectable" [URL="/protocol/Reflectable/hierarchy/"]
    "SequenceType" [URL="/protocol/SequenceType/hierarchy/"]
    "Sliceable" [URL="/protocol/Sliceable/hierarchy/"]
    "Streamable" [URL="/protocol/Streamable/hierarchy/"]
    "String" [URL="/type/String/", style="filled", fillcolor="#ee543d", color="#ee543d"]
    "StringInterpolationConvertible" [URL="/protocol/StringInterpolationConvertible/hierarchy/"]
    "StringLiteralConvertible" [URL="/protocol/StringLiteralConvertible/hierarchy/"]
    "UnicodeScalarLiteralConvertible" [URL="/protocol/UnicodeScalarLiteralConvertible/hierarchy/"]
    "_CollectionType" [URL="/protocol/_CollectionType/hierarchy/"]
    "_Comparable" [URL="/protocol/_Comparable/hierarchy/"]
    "_ExtensibleCollectionType" [URL="/protocol/_ExtensibleCollectionType/hierarchy/"]
    "_SequenceType" [URL="/protocol/_SequenceType/hierarchy/"]
    "_Sequence_Type" [URL="/protocol/_Sequence_Type/hierarchy/"]
    "_Sliceable" [URL="/protocol/_Sliceable/hierarchy/"]    "Reflectable" -> "String"
    "OutputStreamType" -> "String"
    "Streamable" -> "String"
    "StringLiteralConvertible" -> "String"
    "DebugPrintable" -> "String"
    "Comparable" -> "String"
    "Hashable" -> "String"
    "StringInterpolationConvertible" -> "String"
    "Sliceable" -> "String"
    "RangeReplaceableCollectionType" -> "String"
    "ExtendedGraphemeClusterLiteralConvertible" -> "StringLiteralConvertible"
    "UnicodeScalarLiteralConvertible" -> "ExtendedGraphemeClusterLiteralConvertible"
    "_Comparable" -> "Comparable"
    "Equatable" -> "Comparable"
    "Equatable" -> "Hashable"
    "_Sliceable" -> "Sliceable"
    "CollectionType" -> "_Sliceable"
    "_CollectionType" -> "CollectionType"
    "SequenceType" -> "CollectionType"
    "_SequenceType" -> "_CollectionType"
    "_Sequence_Type" -> "SequenceType"
    "_SequenceType" -> "_Sequence_Type"
    "ExtensibleCollectionType" -> "RangeReplaceableCollectionType"
    "_ExtensibleCollectionType" -> "ExtensibleCollectionType"
    "CollectionType" -> "_ExtensibleCollectionType"
    "_CollectionType" -> "CollectionType"
    "SequenceType" -> "CollectionType"
    "_SequenceType" -> "_CollectionType"
    "_Sequence_Type" -> "SequenceType"
    "_SequenceType" -> "_Sequence_Type"
    subgraph Types {
        rank = max; "String";
    }
}