strict digraph "Set<T : Hashable> - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "ArrayLiteralConvertible" [URL="/protocol/ArrayLiteralConvertible/"]
    "CollectionType" [URL="/protocol/CollectionType/"]
    "CustomDebugStringConvertible" [URL="/protocol/CustomDebugStringConvertible/"]
    "CustomStringConvertible" [URL="/protocol/CustomStringConvertible/"]
    "Equatable" [URL="/protocol/Equatable/"]
    "Hashable" [URL="/protocol/Hashable/"]
    "Reflectable" [URL="/protocol/Reflectable/"]
    "SequenceType" [URL="/protocol/SequenceType/"]
    "Set<T : Hashable>" [URL="/type/Set/", style="filled", fillcolor="#ee543d", color="#ee543d"]
    "_CollectionDefaultsType" [URL="/protocol/_CollectionDefaultsType/"]
    "_CollectionGeneratorDefaultsType" [URL="/protocol/_CollectionGeneratorDefaultsType/"]    "Hashable" -> "Set<T : Hashable>"
    "Equatable" -> "Set<T : Hashable>"
    "CollectionType" -> "Set<T : Hashable>"
    "SequenceType" -> "Set<T : Hashable>"
    "_CollectionDefaultsType" -> "Set<T : Hashable>"
    "_CollectionGeneratorDefaultsType" -> "Set<T : Hashable>"
    "ArrayLiteralConvertible" -> "Set<T : Hashable>"
    "CustomStringConvertible" -> "Set<T : Hashable>"
    "CustomDebugStringConvertible" -> "Set<T : Hashable>"
    "Reflectable" -> "Set<T : Hashable>"
    "Equatable" -> "Hashable"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "SequenceType" -> "_CollectionDefaultsType"
    subgraph Types {
        rank = max; "Set<T : Hashable>";
    }
}