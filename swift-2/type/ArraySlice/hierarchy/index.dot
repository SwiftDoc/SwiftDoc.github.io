strict digraph "ArraySlice<Element> - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "ArrayLiteralConvertible" [URL="/protocol/ArrayLiteralConvertible/"]
    "ArraySlice<Element>" [URL="/type/ArraySlice/", style="filled", fillcolor="#ee543d", color="#ee543d"]
    "CollectionType" [URL="/protocol/CollectionType/"]
    "CustomDebugStringConvertible" [URL="/protocol/CustomDebugStringConvertible/"]
    "CustomStringConvertible" [URL="/protocol/CustomStringConvertible/"]
    "ExtensibleCollectionType" [URL="/protocol/ExtensibleCollectionType/"]
    "MutableCollectionType" [URL="/protocol/MutableCollectionType/"]
    "MutableSliceable" [URL="/protocol/MutableSliceable/"]
    "RangeReplaceableCollectionType" [URL="/protocol/RangeReplaceableCollectionType/"]
    "SequenceType" [URL="/protocol/SequenceType/"]
    "Sliceable" [URL="/protocol/Sliceable/"]
    "_ArrayType" [URL="/protocol/_ArrayType/"]
    "_CollectionDefaultsType" [URL="/protocol/_CollectionDefaultsType/"]
    "_CollectionGeneratorDefaultsType" [URL="/protocol/_CollectionGeneratorDefaultsType/"]
    "_DestructorSafeContainer" [URL="/protocol/_DestructorSafeContainer/"]
    "_Reflectable" [URL="/protocol/_Reflectable/"]
    "_Sliceable" [URL="/protocol/_Sliceable/"]
    "__ArrayType" [URL="/protocol/__ArrayType/"]    "_CollectionDefaultsType" -> "ArraySlice<Element>"
    "SequenceType" -> "ArraySlice<Element>"
    "_CollectionGeneratorDefaultsType" -> "ArraySlice<Element>"
    "CollectionType" -> "ArraySlice<Element>"
    "MutableCollectionType" -> "ArraySlice<Element>"
    "Sliceable" -> "ArraySlice<Element>"
    "_Sliceable" -> "ArraySlice<Element>"
    "_DestructorSafeContainer" -> "ArraySlice<Element>"
    "__ArrayType" -> "ArraySlice<Element>"
    "ArrayLiteralConvertible" -> "ArraySlice<Element>"
    "_ArrayType" -> "ArraySlice<Element>"
    "MutableSliceable" -> "ArraySlice<Element>"
    "RangeReplaceableCollectionType" -> "ArraySlice<Element>"
    "ExtensibleCollectionType" -> "ArraySlice<Element>"
    "_Reflectable" -> "ArraySlice<Element>"
    "CustomStringConvertible" -> "ArraySlice<Element>"
    "CustomDebugStringConvertible" -> "ArraySlice<Element>"
    "SequenceType" -> "_CollectionDefaultsType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "CollectionType" -> "MutableCollectionType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "_Sliceable" -> "Sliceable"
    "CollectionType" -> "_Sliceable"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "CollectionType" -> "_Sliceable"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "CollectionType" -> "__ArrayType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "__ArrayType" -> "_ArrayType"
    "RangeReplaceableCollectionType" -> "_ArrayType"
    "MutableSliceable" -> "_ArrayType"
    "ArrayLiteralConvertible" -> "_ArrayType"
    "CollectionType" -> "__ArrayType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "ExtensibleCollectionType" -> "RangeReplaceableCollectionType"
    "CollectionType" -> "ExtensibleCollectionType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "Sliceable" -> "MutableSliceable"
    "MutableCollectionType" -> "MutableSliceable"
    "_Sliceable" -> "Sliceable"
    "CollectionType" -> "_Sliceable"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "CollectionType" -> "MutableCollectionType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "Sliceable" -> "MutableSliceable"
    "MutableCollectionType" -> "MutableSliceable"
    "_Sliceable" -> "Sliceable"
    "CollectionType" -> "_Sliceable"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "CollectionType" -> "MutableCollectionType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "ExtensibleCollectionType" -> "RangeReplaceableCollectionType"
    "CollectionType" -> "ExtensibleCollectionType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    "CollectionType" -> "ExtensibleCollectionType"
    "SequenceType" -> "CollectionType"
    "_CollectionDefaultsType" -> "CollectionType"
    "_CollectionGeneratorDefaultsType" -> "CollectionType"
    "SequenceType" -> "_CollectionDefaultsType"
    subgraph Types {
        rank = max; "ArraySlice<Element>";
    }
}