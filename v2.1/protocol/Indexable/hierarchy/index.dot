strict digraph "Indexable - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "AnyBidirectionalCollection" [URL="/type/AnyBidirectionalCollection/", style=filled]
    "AnyCollectionType" [URL="/protocol/AnyCollectionType/"]
    "AnyForwardCollection" [URL="/type/AnyForwardCollection/", style=filled]
    "AnyRandomAccessCollection" [URL="/type/AnyRandomAccessCollection/", style=filled]
    "Array" [URL="/type/Array/", style=filled]
    "ArraySlice" [URL="/type/ArraySlice/", style=filled]
    "CollectionOfOne" [URL="/type/CollectionOfOne/", style=filled]
    "CollectionType" [URL="/protocol/CollectionType/"]
    "ContiguousArray" [URL="/type/ContiguousArray/", style=filled]
    "Dictionary" [URL="/type/Dictionary/", style=filled]
    "DictionaryLiteral" [URL="/type/DictionaryLiteral/", style=filled]
    "EmptyCollection" [URL="/type/EmptyCollection/", style=filled]
    "FlattenBidirectionalCollection" [URL="/type/FlattenBidirectionalCollection/", style=filled]
    "FlattenCollection" [URL="/type/FlattenCollection/", style=filled]
    "Indexable" [URL="/protocol/Indexable/", style="filled,rounded", fillcolor="#ee543d", color="#ee543d"]
    "LazyCollection" [URL="/type/LazyCollection/", style=filled]
    "LazyCollectionType" [URL="/protocol/LazyCollectionType/"]
    "LazyFilterCollection" [URL="/type/LazyFilterCollection/", style=filled]
    "LazyMapCollection" [URL="/type/LazyMapCollection/", style=filled]
    "MutableCollectionType" [URL="/protocol/MutableCollectionType/"]
    "MutableSlice" [URL="/type/MutableSlice/", style=filled]
    "MutableSliceable" [URL="/protocol/MutableSliceable/"]
    "Range" [URL="/type/Range/", style=filled]
    "RangeReplaceableCollectionType" [URL="/protocol/RangeReplaceableCollectionType/"]
    "Repeat" [URL="/type/Repeat/", style=filled]
    "ReverseCollection" [URL="/type/ReverseCollection/", style=filled]
    "ReverseRandomAccessCollection" [URL="/type/ReverseRandomAccessCollection/", style=filled]
    "Set" [URL="/type/Set/", style=filled]
    "Slice" [URL="/type/Slice/", style=filled]
    "String.CharacterView" [URL="/type/String.CharacterView/", style=filled]
    "String.UTF16View" [URL="/type/String.UTF16View/", style=filled]
    "String.UTF8View" [URL="/type/String.UTF8View/", style=filled]
    "String.UnicodeScalarView" [URL="/type/String.UnicodeScalarView/", style=filled]
    "UnicodeScalar.UTF16View" [URL="/type/UnicodeScalar.UTF16View/", style=filled]
    "UnsafeBufferPointer" [URL="/type/UnsafeBufferPointer/", style=filled]
    "UnsafeMutableBufferPointer" [URL="/type/UnsafeMutableBufferPointer/", style=filled]
    "_ArrayBufferType" [URL="/protocol/_ArrayBufferType/"]
    "_ArrayType" [URL="/protocol/_ArrayType/"]
    "_ReverseCollectionType" [URL="/protocol/_ReverseCollectionType/"]    "Indexable" -> "CollectionType"
    "CollectionType" -> "AnyCollectionType"
    "CollectionType" -> "Array"
    "CollectionType" -> "ArraySlice"
    "CollectionType" -> "CollectionOfOne"
    "CollectionType" -> "ContiguousArray"
    "CollectionType" -> "Dictionary"
    "CollectionType" -> "DictionaryLiteral"
    "CollectionType" -> "EmptyCollection"
    "CollectionType" -> "FlattenBidirectionalCollection"
    "CollectionType" -> "FlattenCollection"
    "CollectionType" -> "LazyCollection"
    "CollectionType" -> "LazyCollectionType"
    "CollectionType" -> "MutableCollectionType"
    "CollectionType" -> "MutableSliceable"
    "CollectionType" -> "Range"
    "CollectionType" -> "RangeReplaceableCollectionType"
    "CollectionType" -> "Repeat"
    "CollectionType" -> "ReverseCollection"
    "CollectionType" -> "Set"
    "CollectionType" -> "Slice"
    "CollectionType" -> "UnicodeScalar.UTF16View"
    "CollectionType" -> "UnsafeBufferPointer"
    "CollectionType" -> "_ReverseCollectionType"
    "CollectionType" -> "String.CharacterView"
    "CollectionType" -> "String.UnicodeScalarView"
    "CollectionType" -> "String.UTF16View"
    "CollectionType" -> "String.UTF8View"
    "AnyCollectionType" -> "AnyBidirectionalCollection"
    "AnyCollectionType" -> "AnyForwardCollection"
    "AnyCollectionType" -> "AnyRandomAccessCollection"
    "LazyCollectionType" -> "LazyCollection"
    "LazyCollectionType" -> "LazyFilterCollection"
    "LazyCollectionType" -> "LazyMapCollection"
    "MutableCollectionType" -> "Array"
    "MutableCollectionType" -> "ArraySlice"
    "MutableCollectionType" -> "ContiguousArray"
    "MutableCollectionType" -> "MutableSlice"
    "MutableCollectionType" -> "MutableSliceable"
    "MutableCollectionType" -> "UnsafeMutableBufferPointer"
    "MutableCollectionType" -> "_ArrayBufferType"
    "MutableSliceable" -> "_ArrayType"
    "_ArrayType" -> "Array"
    "_ArrayType" -> "ArraySlice"
    "_ArrayType" -> "ContiguousArray"
    "MutableSliceable" -> "_ArrayType"
    "_ArrayType" -> "Array"
    "_ArrayType" -> "ArraySlice"
    "_ArrayType" -> "ContiguousArray"
    "RangeReplaceableCollectionType" -> "_ArrayType"
    "RangeReplaceableCollectionType" -> "String.CharacterView"
    "RangeReplaceableCollectionType" -> "String.UnicodeScalarView"
    "_ArrayType" -> "Array"
    "_ArrayType" -> "ArraySlice"
    "_ArrayType" -> "ContiguousArray"
    "_ReverseCollectionType" -> "ReverseCollection"
    "_ReverseCollectionType" -> "ReverseRandomAccessCollection"
    subgraph Types {
        rank = max; "Array"; "ArraySlice"; "CollectionOfOne"; "ContiguousArray"; "Dictionary"; "DictionaryLiteral"; "EmptyCollection"; "FlattenBidirectionalCollection"; "FlattenCollection"; "LazyCollection"; "Range"; "Repeat"; "ReverseCollection"; "Set"; "Slice"; "UnicodeScalar.UTF16View"; "UnsafeBufferPointer"; "String.CharacterView"; "String.UnicodeScalarView"; "String.UTF16View"; "String.UTF8View"; "AnyBidirectionalCollection"; "AnyForwardCollection"; "AnyRandomAccessCollection"; "LazyFilterCollection"; "LazyMapCollection"; "MutableSlice"; "UnsafeMutableBufferPointer"; "ReverseRandomAccessCollection";
    }
}