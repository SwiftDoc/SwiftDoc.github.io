strict digraph "Bit - Type Hierarchy - SwiftDoc.org" {
    pad="0.1,0.8"
    node [shape=box, style="filled,rounded", color="#999999", fillcolor="#999999", fontcolor=white, fontname=Helvetica, fontnames="Helvetica,sansserif", fontsize=12, margin="0.07,0.05", height="0.3"]
    edge [color="#cccccc"]
    "BidirectionalIndexType" [URL="/protocol/BidirectionalIndexType/hierarchy/"]
    "Bit" [URL="/type/Bit/", style="filled", fillcolor="#ee543d", color="#ee543d"]
    "Comparable" [URL="/protocol/Comparable/hierarchy/"]
    "Equatable" [URL="/protocol/Equatable/hierarchy/"]
    "ForwardIndexType" [URL="/protocol/ForwardIndexType/hierarchy/"]
    "IntegerArithmeticType" [URL="/protocol/IntegerArithmeticType/hierarchy/"]
    "RandomAccessIndexType" [URL="/protocol/RandomAccessIndexType/hierarchy/"]
    "Strideable" [URL="/protocol/Strideable/hierarchy/"]
    "_Incrementable" [URL="/protocol/_Incrementable/hierarchy/"]
    "_IntegerArithmeticType" [URL="/protocol/_IntegerArithmeticType/hierarchy/"]
    "_RandomAccessAmbiguity" [URL="/protocol/_RandomAccessAmbiguity/hierarchy/"]
    "_Reflectable" [URL="/protocol/_Reflectable/hierarchy/"]
    "_Strideable" [URL="/protocol/_Strideable/hierarchy/"]    "RandomAccessIndexType" -> "Bit"
    "_Reflectable" -> "Bit"
    "IntegerArithmeticType" -> "Bit"
    "BidirectionalIndexType" -> "RandomAccessIndexType"
    "Strideable" -> "RandomAccessIndexType"
    "_RandomAccessAmbiguity" -> "RandomAccessIndexType"
    "ForwardIndexType" -> "BidirectionalIndexType"
    "_Incrementable" -> "ForwardIndexType"
    "Equatable" -> "_Incrementable"
    "Comparable" -> "Strideable"
    "_Strideable" -> "Strideable"
    "Equatable" -> "Comparable"
    "_IntegerArithmeticType" -> "IntegerArithmeticType"
    "Comparable" -> "IntegerArithmeticType"
    "Equatable" -> "Comparable"
    subgraph Types {
        rank = max; "Bit";
    }
}